//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QuanLiCaPhe.CTHoadonService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CTHoadonService.ICTHoaDonService")]
    public interface ICTHoaDonService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTHoaDonService/DoWork", ReplyAction="http://tempuri.org/ICTHoaDonService/DoWorkResponse")]
        void DoWork();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTHoaDonService/DoWork", ReplyAction="http://tempuri.org/ICTHoaDonService/DoWorkResponse")]
        System.Threading.Tasks.Task DoWorkAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTHoaDonService/getCTHD", ReplyAction="http://tempuri.org/ICTHoaDonService/getCTHDResponse")]
        System.Data.DataTable getCTHD();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTHoaDonService/getCTHD", ReplyAction="http://tempuri.org/ICTHoaDonService/getCTHDResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> getCTHDAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTHoaDonService/layMaHD", ReplyAction="http://tempuri.org/ICTHoaDonService/layMaHDResponse")]
        string layMaHD(int maOder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTHoaDonService/layMaHD", ReplyAction="http://tempuri.org/ICTHoaDonService/layMaHDResponse")]
        System.Threading.Tasks.Task<string> layMaHDAsync(int maOder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTHoaDonService/layTenMon", ReplyAction="http://tempuri.org/ICTHoaDonService/layTenMonResponse")]
        string layTenMon(string maMon);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTHoaDonService/layTenMon", ReplyAction="http://tempuri.org/ICTHoaDonService/layTenMonResponse")]
        System.Threading.Tasks.Task<string> layTenMonAsync(string maMon);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTHoaDonService/kiemTraMonHD", ReplyAction="http://tempuri.org/ICTHoaDonService/kiemTraMonHDResponse")]
        bool kiemTraMonHD(int maHD, string maMon);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTHoaDonService/kiemTraMonHD", ReplyAction="http://tempuri.org/ICTHoaDonService/kiemTraMonHDResponse")]
        System.Threading.Tasks.Task<bool> kiemTraMonHDAsync(int maHD, string maMon);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTHoaDonService/layDonGia", ReplyAction="http://tempuri.org/ICTHoaDonService/layDonGiaResponse")]
        string layDonGia(string maMon);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTHoaDonService/layDonGia", ReplyAction="http://tempuri.org/ICTHoaDonService/layDonGiaResponse")]
        System.Threading.Tasks.Task<string> layDonGiaAsync(string maMon);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTHoaDonService/ThemCTHD", ReplyAction="http://tempuri.org/ICTHoaDonService/ThemCTHDResponse")]
        bool ThemCTHD(DTO_QLCP.CTHoaDon ct);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTHoaDonService/ThemCTHD", ReplyAction="http://tempuri.org/ICTHoaDonService/ThemCTHDResponse")]
        System.Threading.Tasks.Task<bool> ThemCTHDAsync(DTO_QLCP.CTHoaDon ct);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTHoaDonService/SuaCTHD", ReplyAction="http://tempuri.org/ICTHoaDonService/SuaCTHDResponse")]
        bool SuaCTHD(DTO_QLCP.CTHoaDon ct);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTHoaDonService/SuaCTHD", ReplyAction="http://tempuri.org/ICTHoaDonService/SuaCTHDResponse")]
        System.Threading.Tasks.Task<bool> SuaCTHDAsync(DTO_QLCP.CTHoaDon ct);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTHoaDonService/XoaMon", ReplyAction="http://tempuri.org/ICTHoaDonService/XoaMonResponse")]
        bool XoaMon(DTO_QLCP.CTHoaDon ct);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTHoaDonService/XoaMon", ReplyAction="http://tempuri.org/ICTHoaDonService/XoaMonResponse")]
        System.Threading.Tasks.Task<bool> XoaMonAsync(DTO_QLCP.CTHoaDon ct);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTHoaDonService/LayDSCTHD", ReplyAction="http://tempuri.org/ICTHoaDonService/LayDSCTHDResponse")]
        System.Data.DataTable LayDSCTHD(int maHoaDon);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTHoaDonService/LayDSCTHD", ReplyAction="http://tempuri.org/ICTHoaDonService/LayDSCTHDResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> LayDSCTHDAsync(int maHoaDon);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICTHoaDonServiceChannel : QuanLiCaPhe.CTHoadonService.ICTHoaDonService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CTHoaDonServiceClient : System.ServiceModel.ClientBase<QuanLiCaPhe.CTHoadonService.ICTHoaDonService>, QuanLiCaPhe.CTHoadonService.ICTHoaDonService {
        
        public CTHoaDonServiceClient() {
        }
        
        public CTHoaDonServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CTHoaDonServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CTHoaDonServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CTHoaDonServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void DoWork() {
            base.Channel.DoWork();
        }
        
        public System.Threading.Tasks.Task DoWorkAsync() {
            return base.Channel.DoWorkAsync();
        }
        
        public System.Data.DataTable getCTHD() {
            return base.Channel.getCTHD();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> getCTHDAsync() {
            return base.Channel.getCTHDAsync();
        }
        
        public string layMaHD(int maOder) {
            return base.Channel.layMaHD(maOder);
        }
        
        public System.Threading.Tasks.Task<string> layMaHDAsync(int maOder) {
            return base.Channel.layMaHDAsync(maOder);
        }
        
        public string layTenMon(string maMon) {
            return base.Channel.layTenMon(maMon);
        }
        
        public System.Threading.Tasks.Task<string> layTenMonAsync(string maMon) {
            return base.Channel.layTenMonAsync(maMon);
        }
        
        public bool kiemTraMonHD(int maHD, string maMon) {
            return base.Channel.kiemTraMonHD(maHD, maMon);
        }
        
        public System.Threading.Tasks.Task<bool> kiemTraMonHDAsync(int maHD, string maMon) {
            return base.Channel.kiemTraMonHDAsync(maHD, maMon);
        }
        
        public string layDonGia(string maMon) {
            return base.Channel.layDonGia(maMon);
        }
        
        public System.Threading.Tasks.Task<string> layDonGiaAsync(string maMon) {
            return base.Channel.layDonGiaAsync(maMon);
        }
        
        public bool ThemCTHD(DTO_QLCP.CTHoaDon ct) {
            return base.Channel.ThemCTHD(ct);
        }
        
        public System.Threading.Tasks.Task<bool> ThemCTHDAsync(DTO_QLCP.CTHoaDon ct) {
            return base.Channel.ThemCTHDAsync(ct);
        }
        
        public bool SuaCTHD(DTO_QLCP.CTHoaDon ct) {
            return base.Channel.SuaCTHD(ct);
        }
        
        public System.Threading.Tasks.Task<bool> SuaCTHDAsync(DTO_QLCP.CTHoaDon ct) {
            return base.Channel.SuaCTHDAsync(ct);
        }
        
        public bool XoaMon(DTO_QLCP.CTHoaDon ct) {
            return base.Channel.XoaMon(ct);
        }
        
        public System.Threading.Tasks.Task<bool> XoaMonAsync(DTO_QLCP.CTHoaDon ct) {
            return base.Channel.XoaMonAsync(ct);
        }
        
        public System.Data.DataTable LayDSCTHD(int maHoaDon) {
            return base.Channel.LayDSCTHD(maHoaDon);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> LayDSCTHDAsync(int maHoaDon) {
            return base.Channel.LayDSCTHDAsync(maHoaDon);
        }
    }
}
