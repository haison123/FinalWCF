//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QuanLiCaPhe.CTXuatService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CTXuatService.ICTXuatService")]
    public interface ICTXuatService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTXuatService/DoWork", ReplyAction="http://tempuri.org/ICTXuatService/DoWorkResponse")]
        void DoWork();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTXuatService/DoWork", ReplyAction="http://tempuri.org/ICTXuatService/DoWorkResponse")]
        System.Threading.Tasks.Task DoWorkAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTXuatService/getDSXuatNL", ReplyAction="http://tempuri.org/ICTXuatService/getDSXuatNLResponse")]
        System.Data.DataTable getDSXuatNL(int maPX);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTXuatService/getDSXuatNL", ReplyAction="http://tempuri.org/ICTXuatService/getDSXuatNLResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> getDSXuatNLAsync(int maPX);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTXuatService/DSCTPX", ReplyAction="http://tempuri.org/ICTXuatService/DSCTPXResponse")]
        System.Data.DataTable DSCTPX();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTXuatService/DSCTPX", ReplyAction="http://tempuri.org/ICTXuatService/DSCTPXResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> DSCTPXAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTXuatService/Search", ReplyAction="http://tempuri.org/ICTXuatService/SearchResponse")]
        System.Data.DataTable Search(int mapx);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTXuatService/Search", ReplyAction="http://tempuri.org/ICTXuatService/SearchResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> SearchAsync(int mapx);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTXuatService/getMaNL", ReplyAction="http://tempuri.org/ICTXuatService/getMaNLResponse")]
        System.Data.DataTable getMaNL();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTXuatService/getMaNL", ReplyAction="http://tempuri.org/ICTXuatService/getMaNLResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> getMaNLAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTXuatService/getTenNL", ReplyAction="http://tempuri.org/ICTXuatService/getTenNLResponse")]
        string getTenNL(string maNL);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTXuatService/getTenNL", ReplyAction="http://tempuri.org/ICTXuatService/getTenNLResponse")]
        System.Threading.Tasks.Task<string> getTenNLAsync(string maNL);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTXuatService/getDVTNL", ReplyAction="http://tempuri.org/ICTXuatService/getDVTNLResponse")]
        string getDVTNL(string maNL);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTXuatService/getDVTNL", ReplyAction="http://tempuri.org/ICTXuatService/getDVTNLResponse")]
        System.Threading.Tasks.Task<string> getDVTNLAsync(string maNL);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTXuatService/kiemTraXuatNL", ReplyAction="http://tempuri.org/ICTXuatService/kiemTraXuatNLResponse")]
        bool kiemTraXuatNL(int maPX);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTXuatService/kiemTraXuatNL", ReplyAction="http://tempuri.org/ICTXuatService/kiemTraXuatNLResponse")]
        System.Threading.Tasks.Task<bool> kiemTraXuatNLAsync(int maPX);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTXuatService/kiemTraTonTai", ReplyAction="http://tempuri.org/ICTXuatService/kiemTraTonTaiResponse")]
        bool kiemTraTonTai(int maPX, string maNL);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTXuatService/kiemTraTonTai", ReplyAction="http://tempuri.org/ICTXuatService/kiemTraTonTaiResponse")]
        System.Threading.Tasks.Task<bool> kiemTraTonTaiAsync(int maPX, string maNL);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTXuatService/laySLCon", ReplyAction="http://tempuri.org/ICTXuatService/laySLConResponse")]
        string laySLCon(string maNL);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTXuatService/laySLCon", ReplyAction="http://tempuri.org/ICTXuatService/laySLConResponse")]
        System.Threading.Tasks.Task<string> laySLConAsync(string maNL);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTXuatService/ThemCTXuat", ReplyAction="http://tempuri.org/ICTXuatService/ThemCTXuatResponse")]
        bool ThemCTXuat(DTO_QLCP.CTXuatNL ct);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTXuatService/ThemCTXuat", ReplyAction="http://tempuri.org/ICTXuatService/ThemCTXuatResponse")]
        System.Threading.Tasks.Task<bool> ThemCTXuatAsync(DTO_QLCP.CTXuatNL ct);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTXuatService/SuaCTXuat", ReplyAction="http://tempuri.org/ICTXuatService/SuaCTXuatResponse")]
        bool SuaCTXuat(DTO_QLCP.CTXuatNL ct);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTXuatService/SuaCTXuat", ReplyAction="http://tempuri.org/ICTXuatService/SuaCTXuatResponse")]
        System.Threading.Tasks.Task<bool> SuaCTXuatAsync(DTO_QLCP.CTXuatNL ct);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTXuatService/XoaCTXuat", ReplyAction="http://tempuri.org/ICTXuatService/XoaCTXuatResponse")]
        bool XoaCTXuat(DTO_QLCP.CTXuatNL ct);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTXuatService/XoaCTXuat", ReplyAction="http://tempuri.org/ICTXuatService/XoaCTXuatResponse")]
        System.Threading.Tasks.Task<bool> XoaCTXuatAsync(DTO_QLCP.CTXuatNL ct);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICTXuatServiceChannel : QuanLiCaPhe.CTXuatService.ICTXuatService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CTXuatServiceClient : System.ServiceModel.ClientBase<QuanLiCaPhe.CTXuatService.ICTXuatService>, QuanLiCaPhe.CTXuatService.ICTXuatService {
        
        public CTXuatServiceClient() {
        }
        
        public CTXuatServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CTXuatServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CTXuatServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CTXuatServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void DoWork() {
            base.Channel.DoWork();
        }
        
        public System.Threading.Tasks.Task DoWorkAsync() {
            return base.Channel.DoWorkAsync();
        }
        
        public System.Data.DataTable getDSXuatNL(int maPX) {
            return base.Channel.getDSXuatNL(maPX);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> getDSXuatNLAsync(int maPX) {
            return base.Channel.getDSXuatNLAsync(maPX);
        }
        
        public System.Data.DataTable DSCTPX() {
            return base.Channel.DSCTPX();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> DSCTPXAsync() {
            return base.Channel.DSCTPXAsync();
        }
        
        public System.Data.DataTable Search(int mapx) {
            return base.Channel.Search(mapx);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> SearchAsync(int mapx) {
            return base.Channel.SearchAsync(mapx);
        }
        
        public System.Data.DataTable getMaNL() {
            return base.Channel.getMaNL();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> getMaNLAsync() {
            return base.Channel.getMaNLAsync();
        }
        
        public string getTenNL(string maNL) {
            return base.Channel.getTenNL(maNL);
        }
        
        public System.Threading.Tasks.Task<string> getTenNLAsync(string maNL) {
            return base.Channel.getTenNLAsync(maNL);
        }
        
        public string getDVTNL(string maNL) {
            return base.Channel.getDVTNL(maNL);
        }
        
        public System.Threading.Tasks.Task<string> getDVTNLAsync(string maNL) {
            return base.Channel.getDVTNLAsync(maNL);
        }
        
        public bool kiemTraXuatNL(int maPX) {
            return base.Channel.kiemTraXuatNL(maPX);
        }
        
        public System.Threading.Tasks.Task<bool> kiemTraXuatNLAsync(int maPX) {
            return base.Channel.kiemTraXuatNLAsync(maPX);
        }
        
        public bool kiemTraTonTai(int maPX, string maNL) {
            return base.Channel.kiemTraTonTai(maPX, maNL);
        }
        
        public System.Threading.Tasks.Task<bool> kiemTraTonTaiAsync(int maPX, string maNL) {
            return base.Channel.kiemTraTonTaiAsync(maPX, maNL);
        }
        
        public string laySLCon(string maNL) {
            return base.Channel.laySLCon(maNL);
        }
        
        public System.Threading.Tasks.Task<string> laySLConAsync(string maNL) {
            return base.Channel.laySLConAsync(maNL);
        }
        
        public bool ThemCTXuat(DTO_QLCP.CTXuatNL ct) {
            return base.Channel.ThemCTXuat(ct);
        }
        
        public System.Threading.Tasks.Task<bool> ThemCTXuatAsync(DTO_QLCP.CTXuatNL ct) {
            return base.Channel.ThemCTXuatAsync(ct);
        }
        
        public bool SuaCTXuat(DTO_QLCP.CTXuatNL ct) {
            return base.Channel.SuaCTXuat(ct);
        }
        
        public System.Threading.Tasks.Task<bool> SuaCTXuatAsync(DTO_QLCP.CTXuatNL ct) {
            return base.Channel.SuaCTXuatAsync(ct);
        }
        
        public bool XoaCTXuat(DTO_QLCP.CTXuatNL ct) {
            return base.Channel.XoaCTXuat(ct);
        }
        
        public System.Threading.Tasks.Task<bool> XoaCTXuatAsync(DTO_QLCP.CTXuatNL ct) {
            return base.Channel.XoaCTXuatAsync(ct);
        }
    }
}
