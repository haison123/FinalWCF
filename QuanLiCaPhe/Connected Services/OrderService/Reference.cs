//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QuanLiCaPhe.OrderService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="OrderService.IOrderService")]
    public interface IOrderService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/DoWork", ReplyAction="http://tempuri.org/IOrderService/DoWorkResponse")]
        void DoWork();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/DoWork", ReplyAction="http://tempuri.org/IOrderService/DoWorkResponse")]
        System.Threading.Tasks.Task DoWorkAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/getDSOder", ReplyAction="http://tempuri.org/IOrderService/getDSOderResponse")]
        System.Data.DataTable getDSOder();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/getDSOder", ReplyAction="http://tempuri.org/IOrderService/getDSOderResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> getDSOderAsync();
        
        // CODEGEN: Generating message contract since the wrapper name (GetDSOder) of message GetDSOderRequest does not match the default value (GetDSOder1)
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/GetDSOder", ReplyAction="http://tempuri.org/IOrderService/GetDSOderResponse")]
        QuanLiCaPhe.OrderService.GetDSOderResponse GetDSOder1(QuanLiCaPhe.OrderService.GetDSOderRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/GetDSOder", ReplyAction="http://tempuri.org/IOrderService/GetDSOderResponse")]
        System.Threading.Tasks.Task<QuanLiCaPhe.OrderService.GetDSOderResponse> GetDSOder1Async(QuanLiCaPhe.OrderService.GetDSOderRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/getMaNV", ReplyAction="http://tempuri.org/IOrderService/getMaNVResponse")]
        System.Data.DataTable getMaNV();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/getMaNV", ReplyAction="http://tempuri.org/IOrderService/getMaNVResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> getMaNVAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/layMaBan", ReplyAction="http://tempuri.org/IOrderService/layMaBanResponse")]
        string layMaBan(int soBan);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/layMaBan", ReplyAction="http://tempuri.org/IOrderService/layMaBanResponse")]
        System.Threading.Tasks.Task<string> layMaBanAsync(int soBan);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/layMaOder", ReplyAction="http://tempuri.org/IOrderService/layMaOderResponse")]
        int layMaOder();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/layMaOder", ReplyAction="http://tempuri.org/IOrderService/layMaOderResponse")]
        System.Threading.Tasks.Task<int> layMaOderAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/kiemTraTonTai1", ReplyAction="http://tempuri.org/IOrderService/kiemTraTonTai1Response")]
        bool kiemTraTonTai1();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/kiemTraTonTai1", ReplyAction="http://tempuri.org/IOrderService/kiemTraTonTai1Response")]
        System.Threading.Tasks.Task<bool> kiemTraTonTai1Async();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/ThemOder", ReplyAction="http://tempuri.org/IOrderService/ThemOderResponse")]
        bool ThemOder(DTO_QLCP.Oder od);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/ThemOder", ReplyAction="http://tempuri.org/IOrderService/ThemOderResponse")]
        System.Threading.Tasks.Task<bool> ThemOderAsync(DTO_QLCP.Oder od);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/XoaOder", ReplyAction="http://tempuri.org/IOrderService/XoaOderResponse")]
        bool XoaOder(DTO_QLCP.Oder od);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/XoaOder", ReplyAction="http://tempuri.org/IOrderService/XoaOderResponse")]
        System.Threading.Tasks.Task<bool> XoaOderAsync(DTO_QLCP.Oder od);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/ChuyenBan", ReplyAction="http://tempuri.org/IOrderService/ChuyenBanResponse")]
        bool ChuyenBan(DTO_QLCP.Oder od);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/ChuyenBan", ReplyAction="http://tempuri.org/IOrderService/ChuyenBanResponse")]
        System.Threading.Tasks.Task<bool> ChuyenBanAsync(DTO_QLCP.Oder od);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDSOder", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetDSOderRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string maOder;
        
        public GetDSOderRequest() {
        }
        
        public GetDSOderRequest(string maOder) {
            this.maOder = maOder;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDSOderResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetDSOderResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.Data.DataTable GetDSOderResult;
        
        public GetDSOderResponse() {
        }
        
        public GetDSOderResponse(System.Data.DataTable GetDSOderResult) {
            this.GetDSOderResult = GetDSOderResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IOrderServiceChannel : QuanLiCaPhe.OrderService.IOrderService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class OrderServiceClient : System.ServiceModel.ClientBase<QuanLiCaPhe.OrderService.IOrderService>, QuanLiCaPhe.OrderService.IOrderService {
        
        public OrderServiceClient() {
        }
        
        public OrderServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public OrderServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OrderServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OrderServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void DoWork() {
            base.Channel.DoWork();
        }
        
        public System.Threading.Tasks.Task DoWorkAsync() {
            return base.Channel.DoWorkAsync();
        }
        
        public System.Data.DataTable getDSOder() {
            return base.Channel.getDSOder();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> getDSOderAsync() {
            return base.Channel.getDSOderAsync();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        QuanLiCaPhe.OrderService.GetDSOderResponse QuanLiCaPhe.OrderService.IOrderService.GetDSOder1(QuanLiCaPhe.OrderService.GetDSOderRequest request) {
            return base.Channel.GetDSOder1(request);
        }
        
        public System.Data.DataTable GetDSOder1(string maOder) {
            QuanLiCaPhe.OrderService.GetDSOderRequest inValue = new QuanLiCaPhe.OrderService.GetDSOderRequest();
            inValue.maOder = maOder;
            QuanLiCaPhe.OrderService.GetDSOderResponse retVal = ((QuanLiCaPhe.OrderService.IOrderService)(this)).GetDSOder1(inValue);
            return retVal.GetDSOderResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<QuanLiCaPhe.OrderService.GetDSOderResponse> QuanLiCaPhe.OrderService.IOrderService.GetDSOder1Async(QuanLiCaPhe.OrderService.GetDSOderRequest request) {
            return base.Channel.GetDSOder1Async(request);
        }
        
        public System.Threading.Tasks.Task<QuanLiCaPhe.OrderService.GetDSOderResponse> GetDSOder1Async(string maOder) {
            QuanLiCaPhe.OrderService.GetDSOderRequest inValue = new QuanLiCaPhe.OrderService.GetDSOderRequest();
            inValue.maOder = maOder;
            return ((QuanLiCaPhe.OrderService.IOrderService)(this)).GetDSOder1Async(inValue);
        }
        
        public System.Data.DataTable getMaNV() {
            return base.Channel.getMaNV();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> getMaNVAsync() {
            return base.Channel.getMaNVAsync();
        }
        
        public string layMaBan(int soBan) {
            return base.Channel.layMaBan(soBan);
        }
        
        public System.Threading.Tasks.Task<string> layMaBanAsync(int soBan) {
            return base.Channel.layMaBanAsync(soBan);
        }
        
        public int layMaOder() {
            return base.Channel.layMaOder();
        }
        
        public System.Threading.Tasks.Task<int> layMaOderAsync() {
            return base.Channel.layMaOderAsync();
        }
        
        public bool kiemTraTonTai1() {
            return base.Channel.kiemTraTonTai1();
        }
        
        public System.Threading.Tasks.Task<bool> kiemTraTonTai1Async() {
            return base.Channel.kiemTraTonTai1Async();
        }
        
        public bool ThemOder(DTO_QLCP.Oder od) {
            return base.Channel.ThemOder(od);
        }
        
        public System.Threading.Tasks.Task<bool> ThemOderAsync(DTO_QLCP.Oder od) {
            return base.Channel.ThemOderAsync(od);
        }
        
        public bool XoaOder(DTO_QLCP.Oder od) {
            return base.Channel.XoaOder(od);
        }
        
        public System.Threading.Tasks.Task<bool> XoaOderAsync(DTO_QLCP.Oder od) {
            return base.Channel.XoaOderAsync(od);
        }
        
        public bool ChuyenBan(DTO_QLCP.Oder od) {
            return base.Channel.ChuyenBan(od);
        }
        
        public System.Threading.Tasks.Task<bool> ChuyenBanAsync(DTO_QLCP.Oder od) {
            return base.Channel.ChuyenBanAsync(od);
        }
    }
}
