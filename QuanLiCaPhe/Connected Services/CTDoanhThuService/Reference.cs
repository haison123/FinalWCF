//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QuanLiCaPhe.CTDoanhThuService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CTDoanhThuService.ICTDoanhThuService")]
    public interface ICTDoanhThuService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTDoanhThuService/DoWork", ReplyAction="http://tempuri.org/ICTDoanhThuService/DoWorkResponse")]
        void DoWork();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTDoanhThuService/DoWork", ReplyAction="http://tempuri.org/ICTDoanhThuService/DoWorkResponse")]
        System.Threading.Tasks.Task DoWorkAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTDoanhThuService/layDonGia", ReplyAction="http://tempuri.org/ICTDoanhThuService/layDonGiaResponse")]
        string layDonGia(string maMon);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTDoanhThuService/layDonGia", ReplyAction="http://tempuri.org/ICTDoanhThuService/layDonGiaResponse")]
        System.Threading.Tasks.Task<string> layDonGiaAsync(string maMon);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTDoanhThuService/laySLBan", ReplyAction="http://tempuri.org/ICTDoanhThuService/laySLBanResponse")]
        string laySLBan(string maMon);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTDoanhThuService/laySLBan", ReplyAction="http://tempuri.org/ICTDoanhThuService/laySLBanResponse")]
        System.Threading.Tasks.Task<string> laySLBanAsync(string maMon);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTDoanhThuService/kiemTraTonTaiCTDT", ReplyAction="http://tempuri.org/ICTDoanhThuService/kiemTraTonTaiCTDTResponse")]
        bool kiemTraTonTaiCTDT(string maMon, System.DateTime ngay);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTDoanhThuService/kiemTraTonTaiCTDT", ReplyAction="http://tempuri.org/ICTDoanhThuService/kiemTraTonTaiCTDTResponse")]
        System.Threading.Tasks.Task<bool> kiemTraTonTaiCTDTAsync(string maMon, System.DateTime ngay);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTDoanhThuService/laySLMonCu", ReplyAction="http://tempuri.org/ICTDoanhThuService/laySLMonCuResponse")]
        string laySLMonCu(string maMon, string maBan);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTDoanhThuService/laySLMonCu", ReplyAction="http://tempuri.org/ICTDoanhThuService/laySLMonCuResponse")]
        System.Threading.Tasks.Task<string> laySLMonCuAsync(string maMon, string maBan);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTDoanhThuService/kiemTraTonTaiOder", ReplyAction="http://tempuri.org/ICTDoanhThuService/kiemTraTonTaiOderResponse")]
        bool kiemTraTonTaiOder(int maOder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTDoanhThuService/kiemTraTonTaiOder", ReplyAction="http://tempuri.org/ICTDoanhThuService/kiemTraTonTaiOderResponse")]
        System.Threading.Tasks.Task<bool> kiemTraTonTaiOderAsync(int maOder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTDoanhThuService/ThemCTDoanhThu", ReplyAction="http://tempuri.org/ICTDoanhThuService/ThemCTDoanhThuResponse")]
        bool ThemCTDoanhThu(DTO_QLCP.CTDoanhThu ct);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTDoanhThuService/ThemCTDoanhThu", ReplyAction="http://tempuri.org/ICTDoanhThuService/ThemCTDoanhThuResponse")]
        System.Threading.Tasks.Task<bool> ThemCTDoanhThuAsync(DTO_QLCP.CTDoanhThu ct);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTDoanhThuService/SuaCTDoanhThu", ReplyAction="http://tempuri.org/ICTDoanhThuService/SuaCTDoanhThuResponse")]
        bool SuaCTDoanhThu(DTO_QLCP.CTDoanhThu ct);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTDoanhThuService/SuaCTDoanhThu", ReplyAction="http://tempuri.org/ICTDoanhThuService/SuaCTDoanhThuResponse")]
        System.Threading.Tasks.Task<bool> SuaCTDoanhThuAsync(DTO_QLCP.CTDoanhThu ct);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICTDoanhThuServiceChannel : QuanLiCaPhe.CTDoanhThuService.ICTDoanhThuService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CTDoanhThuServiceClient : System.ServiceModel.ClientBase<QuanLiCaPhe.CTDoanhThuService.ICTDoanhThuService>, QuanLiCaPhe.CTDoanhThuService.ICTDoanhThuService {
        
        public CTDoanhThuServiceClient() {
        }
        
        public CTDoanhThuServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CTDoanhThuServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CTDoanhThuServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CTDoanhThuServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void DoWork() {
            base.Channel.DoWork();
        }
        
        public System.Threading.Tasks.Task DoWorkAsync() {
            return base.Channel.DoWorkAsync();
        }
        
        public string layDonGia(string maMon) {
            return base.Channel.layDonGia(maMon);
        }
        
        public System.Threading.Tasks.Task<string> layDonGiaAsync(string maMon) {
            return base.Channel.layDonGiaAsync(maMon);
        }
        
        public string laySLBan(string maMon) {
            return base.Channel.laySLBan(maMon);
        }
        
        public System.Threading.Tasks.Task<string> laySLBanAsync(string maMon) {
            return base.Channel.laySLBanAsync(maMon);
        }
        
        public bool kiemTraTonTaiCTDT(string maMon, System.DateTime ngay) {
            return base.Channel.kiemTraTonTaiCTDT(maMon, ngay);
        }
        
        public System.Threading.Tasks.Task<bool> kiemTraTonTaiCTDTAsync(string maMon, System.DateTime ngay) {
            return base.Channel.kiemTraTonTaiCTDTAsync(maMon, ngay);
        }
        
        public string laySLMonCu(string maMon, string maBan) {
            return base.Channel.laySLMonCu(maMon, maBan);
        }
        
        public System.Threading.Tasks.Task<string> laySLMonCuAsync(string maMon, string maBan) {
            return base.Channel.laySLMonCuAsync(maMon, maBan);
        }
        
        public bool kiemTraTonTaiOder(int maOder) {
            return base.Channel.kiemTraTonTaiOder(maOder);
        }
        
        public System.Threading.Tasks.Task<bool> kiemTraTonTaiOderAsync(int maOder) {
            return base.Channel.kiemTraTonTaiOderAsync(maOder);
        }
        
        public bool ThemCTDoanhThu(DTO_QLCP.CTDoanhThu ct) {
            return base.Channel.ThemCTDoanhThu(ct);
        }
        
        public System.Threading.Tasks.Task<bool> ThemCTDoanhThuAsync(DTO_QLCP.CTDoanhThu ct) {
            return base.Channel.ThemCTDoanhThuAsync(ct);
        }
        
        public bool SuaCTDoanhThu(DTO_QLCP.CTDoanhThu ct) {
            return base.Channel.SuaCTDoanhThu(ct);
        }
        
        public System.Threading.Tasks.Task<bool> SuaCTDoanhThuAsync(DTO_QLCP.CTDoanhThu ct) {
            return base.Channel.SuaCTDoanhThuAsync(ct);
        }
    }
}
