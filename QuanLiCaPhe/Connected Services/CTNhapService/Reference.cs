//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QuanLiCaPhe.CTNhapService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CTNhapService.ICTNhapService")]
    public interface ICTNhapService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTNhapService/DoWork", ReplyAction="http://tempuri.org/ICTNhapService/DoWorkResponse")]
        void DoWork();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTNhapService/DoWork", ReplyAction="http://tempuri.org/ICTNhapService/DoWorkResponse")]
        System.Threading.Tasks.Task DoWorkAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTNhapService/Search_DSNhapNL", ReplyAction="http://tempuri.org/ICTNhapService/Search_DSNhapNLResponse")]
        System.Data.DataTable Search_DSNhapNL(int maPN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTNhapService/Search_DSNhapNL", ReplyAction="http://tempuri.org/ICTNhapService/Search_DSNhapNLResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> Search_DSNhapNLAsync(int maPN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTNhapService/DSCTPN", ReplyAction="http://tempuri.org/ICTNhapService/DSCTPNResponse")]
        System.Data.DataTable DSCTPN();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTNhapService/DSCTPN", ReplyAction="http://tempuri.org/ICTNhapService/DSCTPNResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> DSCTPNAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTNhapService/kiemTraNhapNL", ReplyAction="http://tempuri.org/ICTNhapService/kiemTraNhapNLResponse")]
        bool kiemTraNhapNL(int maPN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTNhapService/kiemTraNhapNL", ReplyAction="http://tempuri.org/ICTNhapService/kiemTraNhapNLResponse")]
        System.Threading.Tasks.Task<bool> kiemTraNhapNLAsync(int maPN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTNhapService/kiemTraTonTai", ReplyAction="http://tempuri.org/ICTNhapService/kiemTraTonTaiResponse")]
        bool kiemTraTonTai(int maPN, string maNL);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTNhapService/kiemTraTonTai", ReplyAction="http://tempuri.org/ICTNhapService/kiemTraTonTaiResponse")]
        System.Threading.Tasks.Task<bool> kiemTraTonTaiAsync(int maPN, string maNL);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTNhapService/getMaNL", ReplyAction="http://tempuri.org/ICTNhapService/getMaNLResponse")]
        System.Data.DataTable getMaNL();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTNhapService/getMaNL", ReplyAction="http://tempuri.org/ICTNhapService/getMaNLResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> getMaNLAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTNhapService/getTenNL", ReplyAction="http://tempuri.org/ICTNhapService/getTenNLResponse")]
        string getTenNL(string maNL);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTNhapService/getTenNL", ReplyAction="http://tempuri.org/ICTNhapService/getTenNLResponse")]
        System.Threading.Tasks.Task<string> getTenNLAsync(string maNL);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTNhapService/getDVTNL", ReplyAction="http://tempuri.org/ICTNhapService/getDVTNLResponse")]
        string getDVTNL(string maNL);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTNhapService/getDVTNL", ReplyAction="http://tempuri.org/ICTNhapService/getDVTNLResponse")]
        System.Threading.Tasks.Task<string> getDVTNLAsync(string maNL);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTNhapService/getDonGia", ReplyAction="http://tempuri.org/ICTNhapService/getDonGiaResponse")]
        string getDonGia(string maNL);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTNhapService/getDonGia", ReplyAction="http://tempuri.org/ICTNhapService/getDonGiaResponse")]
        System.Threading.Tasks.Task<string> getDonGiaAsync(string maNL);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTNhapService/ThemCTNhap", ReplyAction="http://tempuri.org/ICTNhapService/ThemCTNhapResponse")]
        bool ThemCTNhap(DTO_QLCP.CTNhapNL ct);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTNhapService/ThemCTNhap", ReplyAction="http://tempuri.org/ICTNhapService/ThemCTNhapResponse")]
        System.Threading.Tasks.Task<bool> ThemCTNhapAsync(DTO_QLCP.CTNhapNL ct);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTNhapService/SuaCTNhap", ReplyAction="http://tempuri.org/ICTNhapService/SuaCTNhapResponse")]
        bool SuaCTNhap(DTO_QLCP.CTNhapNL ct);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTNhapService/SuaCTNhap", ReplyAction="http://tempuri.org/ICTNhapService/SuaCTNhapResponse")]
        System.Threading.Tasks.Task<bool> SuaCTNhapAsync(DTO_QLCP.CTNhapNL ct);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTNhapService/XoaCTNhap", ReplyAction="http://tempuri.org/ICTNhapService/XoaCTNhapResponse")]
        bool XoaCTNhap(DTO_QLCP.CTNhapNL ct);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTNhapService/XoaCTNhap", ReplyAction="http://tempuri.org/ICTNhapService/XoaCTNhapResponse")]
        System.Threading.Tasks.Task<bool> XoaCTNhapAsync(DTO_QLCP.CTNhapNL ct);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTNhapService/search", ReplyAction="http://tempuri.org/ICTNhapService/searchResponse")]
        System.Data.DataTable search(int mapn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTNhapService/search", ReplyAction="http://tempuri.org/ICTNhapService/searchResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> searchAsync(int mapn);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICTNhapServiceChannel : QuanLiCaPhe.CTNhapService.ICTNhapService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CTNhapServiceClient : System.ServiceModel.ClientBase<QuanLiCaPhe.CTNhapService.ICTNhapService>, QuanLiCaPhe.CTNhapService.ICTNhapService {
        
        public CTNhapServiceClient() {
        }
        
        public CTNhapServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CTNhapServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CTNhapServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CTNhapServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void DoWork() {
            base.Channel.DoWork();
        }
        
        public System.Threading.Tasks.Task DoWorkAsync() {
            return base.Channel.DoWorkAsync();
        }
        
        public System.Data.DataTable Search_DSNhapNL(int maPN) {
            return base.Channel.Search_DSNhapNL(maPN);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> Search_DSNhapNLAsync(int maPN) {
            return base.Channel.Search_DSNhapNLAsync(maPN);
        }
        
        public System.Data.DataTable DSCTPN() {
            return base.Channel.DSCTPN();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> DSCTPNAsync() {
            return base.Channel.DSCTPNAsync();
        }
        
        public bool kiemTraNhapNL(int maPN) {
            return base.Channel.kiemTraNhapNL(maPN);
        }
        
        public System.Threading.Tasks.Task<bool> kiemTraNhapNLAsync(int maPN) {
            return base.Channel.kiemTraNhapNLAsync(maPN);
        }
        
        public bool kiemTraTonTai(int maPN, string maNL) {
            return base.Channel.kiemTraTonTai(maPN, maNL);
        }
        
        public System.Threading.Tasks.Task<bool> kiemTraTonTaiAsync(int maPN, string maNL) {
            return base.Channel.kiemTraTonTaiAsync(maPN, maNL);
        }
        
        public System.Data.DataTable getMaNL() {
            return base.Channel.getMaNL();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> getMaNLAsync() {
            return base.Channel.getMaNLAsync();
        }
        
        public string getTenNL(string maNL) {
            return base.Channel.getTenNL(maNL);
        }
        
        public System.Threading.Tasks.Task<string> getTenNLAsync(string maNL) {
            return base.Channel.getTenNLAsync(maNL);
        }
        
        public string getDVTNL(string maNL) {
            return base.Channel.getDVTNL(maNL);
        }
        
        public System.Threading.Tasks.Task<string> getDVTNLAsync(string maNL) {
            return base.Channel.getDVTNLAsync(maNL);
        }
        
        public string getDonGia(string maNL) {
            return base.Channel.getDonGia(maNL);
        }
        
        public System.Threading.Tasks.Task<string> getDonGiaAsync(string maNL) {
            return base.Channel.getDonGiaAsync(maNL);
        }
        
        public bool ThemCTNhap(DTO_QLCP.CTNhapNL ct) {
            return base.Channel.ThemCTNhap(ct);
        }
        
        public System.Threading.Tasks.Task<bool> ThemCTNhapAsync(DTO_QLCP.CTNhapNL ct) {
            return base.Channel.ThemCTNhapAsync(ct);
        }
        
        public bool SuaCTNhap(DTO_QLCP.CTNhapNL ct) {
            return base.Channel.SuaCTNhap(ct);
        }
        
        public System.Threading.Tasks.Task<bool> SuaCTNhapAsync(DTO_QLCP.CTNhapNL ct) {
            return base.Channel.SuaCTNhapAsync(ct);
        }
        
        public bool XoaCTNhap(DTO_QLCP.CTNhapNL ct) {
            return base.Channel.XoaCTNhap(ct);
        }
        
        public System.Threading.Tasks.Task<bool> XoaCTNhapAsync(DTO_QLCP.CTNhapNL ct) {
            return base.Channel.XoaCTNhapAsync(ct);
        }
        
        public System.Data.DataTable search(int mapn) {
            return base.Channel.search(mapn);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> searchAsync(int mapn) {
            return base.Channel.searchAsync(mapn);
        }
    }
}
